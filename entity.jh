entity Plant {
	fleetId String,
    name String,
    notes String,
    purchaseDate Instant,
    isActive Boolean,
    description String,
    vin String,
    rego String,
    dateOfManufacture Instant,
    image Blob,
    tankSize Integer,
    meterReading Integer,
    maintenanceDueAt Integer,
    meterUnit MeterUnit,
    certificateDueDate Instant,
    rucDueAtKm Integer,
    hubboReading Integer,
    loadCapacity Integer,
    hourlyRate Double,
    registrationDueDate Instant,
    hireStatus HireStatus,
    gpsDeviceSerial String
}

entity Location {
    latitude Double,
    longitude Double,
    address String,
    bearing Double,
    direction String,
    speed Double,
    timestamp Instant,
    provider String
}

enum HireStatus{
	ONHIRE,
    OFFHIRE,
    OFFBREAK,
    OFFSEASO
}

entity OffHireRequest {

}

entity Category{
	category String,
    description String,
    type String,
    trackUsage Boolean,
    dailyRate Double,
    loadCapacity Integer,
    hourlyRate Double,
    isEarchMovingPlant Boolean,
    isTrackedForInternalBilling Boolean,
    maintenanceGroup MaintenanceGroup
}

entity Company{
	company String,
    phone String,
    address String,
    location String,
    webPage String,
    notes String,
    isActive Boolean,
    abbreviation String
}

enum MeterUnit{
	KM,
    HOUR
}

entity MaintenanceContractor{
	name String
}

entity Project{
	jobNo String,
	name String,
    location String,
    notes String,
    startDate Instant,
    endDate Instant,
    isActive Boolean,
    isOnHold Boolean,
    details String
}

entity Competency{
	competency String,
    grouping String,
    sortOrder Integer
}

entity People{
    email String,
    phone String,
    name String

}

entity Niggle{
    description String maxlength(1024),
    status Status,
    note String maxlength(1024),
    priority Priority,
    quattraReference String,
    quattraComments String maxlength(1024),
	invoiceNo String,
    dateOpened Instant,
    dateClosed Instant,
    dateCompleted Instant,
    eta Instant
}

enum Priority{
   LOW,
   MEDIUM,
   HIGH
}

enum Status{
	SUBMITTED,
    OPEN,
    WINTER_WORK,
    IN_PROGRESS,
    ON_HOLD,
    COMPLETED,
    CLOSED,
    TBR
}

entity PlantLog{
    meterReading Integer,
    hubboReading Integer,
    serviceDueAt Integer,
    rucDueAt Integer,
    wofDueDate Instant,
    cofDueDate Instant,
    serviceDueDate Instant
}

entity PurchaseOrder{
    orderNumber String
}

entity NiggleSnapshot{
    date LocalDate,
    status Status,
    priority Priority,
    count Integer,
    ageOfOldest Integer
}

entity EmailSubscription {
    event Event,
    email String,
    recipientType RecipientType
}

entity PrestartCheck {
	signature Blob
}

entity PrestartCheckResponse {

}

entity PrestartCheckConfig {
    name String
}

entity PrestartQuestion {
    body String,
    isLockOutRequired Boolean
}

entity PrestartQuestionOption {
    body String,
    isNormal Boolean,
    isActive Boolean
}

entity PrestartCheckQuestionListItem {
	order Integer
}

enum Event {
    ON_HOLD,
    HIGH_PRIORITY
}

enum RecipientType {
    TO,
    CC,
    BCC
}

relationship ManyToOne {
	Plant{category} to Category,
    Plant{owner} to Company,
    Plant{assignedContractor} to MaintenanceContractor,
    Plant{project} to Project,
    PlantLog{plant} to Plant,
    Niggle{ plant} to Plant,
    Niggle{ assignedContractor } to MaintenanceContractor,
    Category{competency} to Competency,
    PlantLog{operator} to People,
    PlantLog{site} to Project,
    Location {project} to Project,
    Category {prestartCheckConfig } to PrestartCheckConfig,
    PrestartQuestionOption { question } to PrestartQuestion,
    PrestartCheckResponse { question } to PrestartQuestion,
    PrestartCheckResponse { response } to PrestartQuestionOption,
	PrestartCheckQuestionListItem { question } to PrestartQuestion,
    PrestartCheck { project } to Project,
    PrestartCheck { plant } to Plant,
    PrestartCheck { location } to Location,
    PrestartCheck { operator } to People
   
}

relationship OneToOne {
    Niggle{purchaseOrder} to PurchaseOrder,
    Plant{location} to Location,
    PrestartCheck { plantLog } to PlantLog,
    Plant{ lastLog } to PlantLog
}

relationship OneToMany {
	PrestartCheckConfig { questionlist } to PrestartCheckQuestionListItem,
    PrestartCheck { responses } to PrestartCheckResponse
}

enum MaintenanceGroup {
    YELLOW_FLEET,
    WHITE_FLEET
}





filter Niggle
filter Plant
filter NiggleSnapshot
filter PrestartQuestion
filter PrestartCheck
filter PrestartQuestionOption
filter PrestartCheckResponse
filter PrestartCheckConfig
filter PrestartCheckQuestionListItem

